// <auto-generated />
using System;
using LegumEz.Infrastructure.Persistance.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegumEz.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240116210552_Initialize-LegumEzDb")]
    partial class InitializeLegumEzDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LegumEz.Infrastructure.Persistance.DAL.Cultures.Culture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Culture", (string)null);
                });

            modelBuilder.Entity("LegumEz.Infrastructure.Persistance.DAL.Cultures.Culture", b =>
                {
                    b.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.ConditionCroissance", "ConditionCroissance", b1 =>
                        {
                            b1.Property<Guid>("CultureId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("CultureId");

                            b1.ToTable("ConditionCroissance", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CultureId");

                            b1.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.Temperature", "TemperatureMinimale", b2 =>
                                {
                                    b2.Property<Guid>("ConditionCroissanceCultureId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Unite")
                                        .HasColumnType("int");

                                    b2.Property<double>("Valeur")
                                        .HasColumnType("float");

                                    b2.HasKey("ConditionCroissanceCultureId");

                                    b2.ToTable("ConditionCroissance");

                                    b2.WithOwner()
                                        .HasForeignKey("ConditionCroissanceCultureId");
                                });

                            b1.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.Temperature", "TemperatureOptimale", b2 =>
                                {
                                    b2.Property<Guid>("ConditionCroissanceCultureId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Unite")
                                        .HasColumnType("int");

                                    b2.Property<double>("Valeur")
                                        .HasColumnType("float");

                                    b2.HasKey("ConditionCroissanceCultureId");

                                    b2.ToTable("ConditionCroissance");

                                    b2.WithOwner()
                                        .HasForeignKey("ConditionCroissanceCultureId");
                                });

                            b1.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.Temps", "TempsDeCroissance", b2 =>
                                {
                                    b2.Property<Guid>("ConditionCroissanceCultureId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Unite")
                                        .HasColumnType("int");

                                    b2.Property<int>("Valeur")
                                        .HasColumnType("int");

                                    b2.HasKey("ConditionCroissanceCultureId");

                                    b2.ToTable("ConditionCroissance");

                                    b2.WithOwner()
                                        .HasForeignKey("ConditionCroissanceCultureId");
                                });

                            b1.Navigation("TemperatureMinimale")
                                .IsRequired();

                            b1.Navigation("TemperatureOptimale")
                                .IsRequired();

                            b1.Navigation("TempsDeCroissance")
                                .IsRequired();
                        });

                    b.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.ConditionGermination", "ConditionGermination", b1 =>
                        {
                            b1.Property<Guid>("CultureId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("CultureId");

                            b1.ToTable("ConditionGermination", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CultureId");

                            b1.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.Temperature", "TemperatureMinimale", b2 =>
                                {
                                    b2.Property<Guid>("ConditionGerminationCultureId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Unite")
                                        .HasColumnType("int");

                                    b2.Property<double>("Valeur")
                                        .HasColumnType("float");

                                    b2.HasKey("ConditionGerminationCultureId");

                                    b2.ToTable("ConditionGermination");

                                    b2.WithOwner()
                                        .HasForeignKey("ConditionGerminationCultureId");
                                });

                            b1.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.Temperature", "TemperatureOptimale", b2 =>
                                {
                                    b2.Property<Guid>("ConditionGerminationCultureId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Unite")
                                        .HasColumnType("int");

                                    b2.Property<double>("Valeur")
                                        .HasColumnType("float");

                                    b2.HasKey("ConditionGerminationCultureId");

                                    b2.ToTable("ConditionGermination");

                                    b2.WithOwner()
                                        .HasForeignKey("ConditionGerminationCultureId");
                                });

                            b1.OwnsOne("LegumEz.Infrastructure.Persistance.DAL.Cultures.Temps", "TempsDeLevee", b2 =>
                                {
                                    b2.Property<Guid>("ConditionGerminationCultureId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Unite")
                                        .HasColumnType("int");

                                    b2.Property<int>("Valeur")
                                        .HasColumnType("int");

                                    b2.HasKey("ConditionGerminationCultureId");

                                    b2.ToTable("ConditionGermination");

                                    b2.WithOwner()
                                        .HasForeignKey("ConditionGerminationCultureId");
                                });

                            b1.Navigation("TemperatureMinimale")
                                .IsRequired();

                            b1.Navigation("TemperatureOptimale")
                                .IsRequired();

                            b1.Navigation("TempsDeLevee")
                                .IsRequired();
                        });

                    b.Navigation("ConditionCroissance")
                        .IsRequired();

                    b.Navigation("ConditionGermination")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
